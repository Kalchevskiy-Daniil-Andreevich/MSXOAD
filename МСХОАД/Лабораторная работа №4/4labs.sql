CREATE OR REPLACE PROCEDURE ADD_ROWS_TO_BOOKS(
    pID_AUTHOR NUMBER,
    pID_GENRE NUMBER,
    pNAME_BOOK NVARCHAR2,
    pDIRECTION_BOOK NVARCHAR2,
    pYEAR_OF_PUBLISHING DATE
)
IS
BEGIN
    INSERT INTO BOOKS (
        ID_AUTHOR,
        ID_GENRE,
        NAME_BOOK,
        DIRECTION_BOOK,
        YEAR_OF_PUBLISHING
    )
    VALUES (
        pID_AUTHOR,
        pID_GENRE,
        pNAME_BOOK,
        pDIRECTION_BOOK,
        pYEAR_OF_PUBLISHING
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('CODE ERROR: ' || SQLCODE || ' MESSAGE: ' || SQLERRM);
END;

BEGIN
    FOR COUNTER IN  1..100
    LOOP
        ADD_ROWS_TO_BOOKS(IDAUTHORS, IDGENERE, RAND_NAME_BOOKS, RAND_DIRECTION_BOOK, RAND_YEAR_OF_PUBLISHING);
    END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
            RAISE_APPLICATION_ERROR(-20001, 'An error occurred while adding rows to the BOOKS table.');    
END;

----------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION IDAUTHORS
RETURN NUMBER
IS
COUNTIDAUTHORS NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 100) NUM INTO COUNTIDAUTHORS FROM DUAL;
    COUNTIDAUTHORS := ROUND(COUNTIDAUTHORS);
    RETURN COUNTIDAUTHORS;
END;

CREATE OR REPLACE FUNCTION IDGENERE
RETURN NUMBER
IS
COUNTIDGENERE NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 15) NUM INTO COUNTIDGENERE FROM DUAL;
    COUNTIDGENERE := ROUND(COUNTIDGENERE);
    RETURN COUNTIDGENERE;
END;

CREATE TABLE NAME_BOOKS
(
    NAME_BOOK NVARCHAR2(50)
);

BEGIN
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Новые берега');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Поцелуй или смерть');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Цветочная дорога');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Одинокий мечник');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Мать волков');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('На грани');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Разукрась мои воспоминания');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Криптография');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Цена иной реальности');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Красная миля');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Лезвие на воде');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Призраки и кровь');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Путь к звездам');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('По пути с Вечностью');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Дотянуться до тебя');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Выход есть всегда');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Другой взгляд на мир');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Новое время');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Проклятая душа');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Необычный путь');
    INSERT INTO NAME_BOOKS(NAME_BOOK) VALUES('Воспитанная ветром');
END;


CREATE TABLE DIRECTION_BOOKS
(
    DIRECTION_BOOK NVARCHAR2(50)
);

BEGIN
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Поэты-кавалеры');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Поэты-метафизики');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Любовная литература');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Романтизм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Тёмный романтизм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Американский романтизм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Озёрная школа или лейкисты');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Готическая литература');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Прерафаэлиты');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Трансцендентализм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Реализм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Натурализм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Веризм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Декадентское движение');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Символизм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Маджар');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Футуризм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Акмеизм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Поток сознания');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Имажизм');
    INSERT INTO DIRECTION_BOOKS(DIRECTION_BOOK) VALUES('Дада');
END;

CREATE OR REPLACE FUNCTION RAND_NAME_BOOKS
RETURN NVARCHAR2
IS 
FNAME_BOOKS NVARCHAR2(50);
BEGIN
SELECT NAME_BOOK INTO FNAME_BOOKS FROM(
SELECT NAME_BOOK FROM NAME_BOOKS
ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN FNAME_BOOKS;
END;

CREATE OR REPLACE FUNCTION RAND_DIRECTION_BOOK
RETURN NVARCHAR2
IS 
FDIRECTION_BOOK NVARCHAR2(50);
BEGIN
SELECT DIRECTION_BOOK INTO FDIRECTION_BOOK FROM(
SELECT DIRECTION_BOOK FROM DIRECTION_BOOKS
ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN FDIRECTION_BOOK;
END;

CREATE OR REPLACE FUNCTION RAND_YEAR_OF_PUBLISHING
RETURN DATE
IS
    START_DATE  DATE := TO_DATE('1900-01-01', 'YYYY-MM-DD');
    END_DATE    DATE := TO_DATE('2023-12-31', 'YYYY-MM-DD');
    RANDOM_DAYS  NUMBER;
BEGIN
    RANDOM_DAYS := TRUNC(DBMS_RANDOM.VALUE(0, END_DATE - START_DATE + 1));
    RETURN START_DATE + RANDOM_DAYS;
END;

CREATE OR REPLACE FUNCTION MOUNTHOFPUBL
RETURN NUMBER
IS
COUNTMONTHS NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 12) NUM INTO COUNTMONTHS FROM DUAL;
    COUNTMONTHS := ROUND(COUNTMONTHS);
    RETURN COUNTMONTHS;
END;

CREATE OR REPLACE FUNCTION QUARTEROFPUBL
RETURN NUMBER
IS
COUNTQUARTERS NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 4) NUM INTO COUNTQUARTERS FROM DUAL;
    COUNTQUARTERS := ROUND(COUNTQUARTERS);
    RETURN COUNTQUARTERS;
END;

CREATE OR REPLACE FUNCTION HALFYEAROFPUBL
RETURN NUMBER
IS
COUNTHALFYEAR NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 2) NUM INTO COUNTHALFYEAR FROM DUAL;
    COUNTHALFYEAR := ROUND(COUNTHALFYEAR);
    RETURN COUNTHALFYEAR;
END;

----------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE ADD_ROWS_TO_GENRES(
    pNAME_GENRE NVARCHAR2
)
IS
BEGIN
    INSERT INTO GENRES (
        NAME_GENRE
    )
    VALUES (
        pNAME_GENRE
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('CODE ERROR: ' || SQLCODE || ' MESSAGE: ' || SQLERRM);
END;

BEGIN
    FOR COUNTER IN  1..100
    LOOP
        ADD_ROWS_TO_GENRES(RAND_NAME_GENRES);
    END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
            RAISE_APPLICATION_ERROR(-20001, 'An error occurred while adding rows to the BOOKS table.');    
END;

CREATE TABLE NAME_GENRES
(
    NAME_GENRE NVARCHAR2(50)
);

BEGIN
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Альтернативная история');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Криминал');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Мифы и легенды');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Призраки');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Тайны/интриги');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Психологический триллер');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Соулмейты');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('19-20 век');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Творческие личности');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Юриспруденция');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Дедектив');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Зомбиапокалипсис');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Торговля');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Ханахаки');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Музыка');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Ужасы');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('18-19 век');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Викинги');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Спорт');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Боги');
    INSERT INTO NAME_GENRES(NAME_GENRE) VALUES('Трагедия');
END;

CREATE OR REPLACE FUNCTION RAND_NAME_GENRES
RETURN NVARCHAR2
IS 
FNAME_GENRES NVARCHAR2(50);
BEGIN
SELECT NAME_GENRE INTO FNAME_GENRES FROM(
SELECT NAME_GENRE FROM NAME_GENRES
ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN FNAME_GENRES;
END;

----------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE ADD_ROWS_TO_LIST_OF_AUTHORS(pSURNAME_AUTHOR NVARCHAR2, pNAME_AUTHOR NVARCHAR2, pPATRONYMIC_AUTHOR NVARCHAR2)
IS
BEGIN
        INSERT INTO AUTHORS(LASTNAME_AUTHOR, NAME_AUTHOR, MIDDLENAME_AUTHOR)
        VALUES(pSURNAME_AUTHOR, pNAME_AUTHOR, pPATRONYMIC_AUTHOR);
        EXCEPTION
            WHEN OTHERS
                THEN DBMS_OUTPUT.PUT_LINE('CODE ERROR: '||SQLCODE||' MESSAGE: '||SQLERRM);
END;

BEGIN
    FOR COUNTER IN 1..100
    LOOP
        ADD_ROWS_TO_LIST_OF_AUTHORS(FUNC_SURNAME_MEN,FUNC_NAME_MEN, FUNC_PATRONYMIC_MEN);
    END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
            RAISE_APPLICATION_ERROR(-20001, 'An error occurred while adding rows to the LIST_OF_AUTHORS table.');
END;


CREATE OR REPLACE PROCEDURE ADD_ROWS_TO_LIST_OF_READERS(pSURNAME_AUTHOR NVARCHAR2, pNAME_AUTHOR NVARCHAR2, pPATRONYMIC_AUTHOR NVARCHAR2)
IS
BEGIN
        INSERT INTO READERS(LASTNAME_READER, NAME_READER, MIDDLENAME_READER)
        VALUES(pSURNAME_AUTHOR, pNAME_AUTHOR, pPATRONYMIC_AUTHOR);
        EXCEPTION
            WHEN OTHERS
                THEN DBMS_OUTPUT.PUT_LINE('CODE ERROR: '||SQLCODE||' MESSAGE: '||SQLERRM);
END;

BEGIN
    FOR COUNTER IN 1..100
    LOOP
        ADD_ROWS_TO_LIST_OF_READERS(FUNC_SURNAME_MEN,FUNC_NAME_MEN, FUNC_PATRONYMIC_MEN);
    END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
            RAISE_APPLICATION_ERROR(-20001, 'An error occurred while adding rows to the LIST_OF_AUTHORS table.');
END;


CREATE TABLE FIO_MEN
(
    FIRST_NAME NVARCHAR2(20),
    LAST_NAME NVARCHAR2(20),
    MIDDLE_NAME NVARCHAR2(20)
);

BEGIN
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Адам', 'Голубев', 'Егорович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Тимофей', 'Воробьев', 'Фёдорович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Артём', 'Попов', 'Павлович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Михаил', 'Новиков', 'Михайлович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Пётр', 'Егоров', 'Матвеевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Семён', 'Алексеев', 'Александрович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Иван', 'Демидов', 'Даниилович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Матвей', 'Данилов', 'Владиславович');
    
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Сергей', 'Вишняков', 'Сергеевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Юрий', 'Выдрин', 'Юриьевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Степан', 'Ермолин', 'Степанович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Пётр', 'Гуркин', 'Петрович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Владислав', 'Бодрев', 'Владиславович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Дмитрий', 'Зенько', 'Дмитриевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Евгений', 'Мирошников', 'Евгеньевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Даниил', 'Харитонов', 'Даниилович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Артём', 'Абрамович', 'Артёмович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Андрей', 'Кулинич', 'Андреевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Павел', 'Костылев', 'Павлович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Валерий', 'Шарипов', 'Валерьевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Иван', 'Залуцкий', 'Иванович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Кирилл', 'Кухарский', 'Кириллович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Никита', 'Михайлов', 'Никитьевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Егор', 'Тесленко', 'Егорович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Филипп', 'Ищук', 'Филиппович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Богдан', 'Сухарев', 'Богданович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Ярослав', 'Демченко', 'Ярослав');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Климентий', 'Велетнюк', 'Климентьевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Святослав', 'Деревинский', 'Святослав');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Максим', 'Мороз', 'Максимович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Денис', 'Ляшенко', 'Денисович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Игорь', 'Оруджев', 'Игорьевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Матвей', 'Нагорный', 'Матвеевич');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Владимир', 'Варакута', 'Владимирович');
    INSERT INTO FIO_MEN (FIRST_NAME, LAST_NAME, MIDDLE_NAME) VALUES ('Михаил', 'Котенкович', 'Михаилович');
    
END;

CREATE OR REPLACE FUNCTION FUNC_NAME_MEN
RETURN NVARCHAR2
IS 
NAME_MEN NVARCHAR2(20);
BEGIN
SELECT FIRST_NAME INTO NAME_MEN FROM(
SELECT FIRST_NAME FROM FIO_MEN ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN NAME_MEN;
END;

CREATE OR REPLACE FUNCTION FUNC_SURNAME_MEN
RETURN NVARCHAR2
IS 
SURNAME_MEN NVARCHAR2(20);
BEGIN
SELECT LAST_NAME INTO SURNAME_MEN FROM (
SELECT LAST_NAME FROM FIO_MEN ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN SURNAME_MEN;
END;

CREATE OR REPLACE FUNCTION FUNC_PATRONYMIC_MEN
RETURN NVARCHAR2
IS 
PATRONYMIC_MEN NVARCHAR2(20);
BEGIN
SELECT MIDDLE_NAME INTO PATRONYMIC_MEN FROM (
SELECT MIDDLE_NAME FROM FIO_MEN ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN PATRONYMIC_MEN;
END;
--------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE ADD_ROWS_TO_ORDERS(
    pID_BOOK NUMBER,
    pID_READER NUMBER,
    pSTATUS_ORDER NVARCHAR2,
    pDATE_ORDER DATE,
    pPRICE_ORDER NUMBER
)
IS
BEGIN
    INSERT INTO ORDERS (
        ID_BOOK,
        ID_READER,
        STATUS_ORDER,
        DATE_ORDER,
        PRICE_ORDER
    )
    VALUES (
        pID_BOOK,
        pID_READER,
        pSTATUS_ORDER,
        pDATE_ORDER,
        pPRICE_ORDER
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('CODE ERROR: ' || SQLCODE || ' MESSAGE: ' || SQLERRM);
END;

BEGIN
    FOR COUNTER IN  1..100
    LOOP
        INSERT INTO ORDERS(ID_BOOK, ID_READER, STATUS_ORDER, DATE_ORDER, PRICE_ORDER) VALUES(IBOOKS, IDREADER, RAND_STATORDER, RAND_YEAR_OF_PUBLISHING, PRICEORDER);
    END LOOP;  
END;


CREATE OR REPLACE FUNCTION IBOOKS
RETURN NUMBER
IS
COUNTIDBOOKS NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 100) NUM INTO COUNTIDBOOKS FROM DUAL;
    COUNTIDBOOKS := ROUND(COUNTIDBOOKS);
    RETURN COUNTIDBOOKS;
END;


CREATE OR REPLACE FUNCTION IDREADER
RETURN NUMBER
IS
COUNTIDREADER NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 100) NUM INTO COUNTIDREADER FROM DUAL;
    COUNTIDREADER := ROUND(COUNTIDREADER);
    RETURN COUNTIDREADER;
END;

CREATE TABLE STATORDER
(
    STATUS NVARCHAR2(50)
);

BEGIN
    INSERT INTO STATORDER(STATUS) VALUES('Оформлен');
    INSERT INTO STATORDER(STATUS) VALUES('Ожидает оплату');
    INSERT INTO STATORDER(STATUS) VALUES('Оплачен');
    INSERT INTO STATORDER(STATUS) VALUES('Подтвержден');
    
END;

CREATE OR REPLACE FUNCTION RAND_STATORDER
RETURN NVARCHAR2
IS 
FSTATORDER NVARCHAR2(50);
BEGIN
SELECT STATUS INTO FSTATORDER FROM(
SELECT STATUS FROM STATORDER
ORDER BY DBMS_RANDOM.RANDOM)
FETCH FIRST 1 ROW ONLY;
RETURN FSTATORDER;
END;


CREATE OR REPLACE FUNCTION PRICEORDER
RETURN NUMBER
IS
COUNTPRICEORDER NUMBER;
BEGIN
    SELECT DBMS_RANDOM.VALUE(1, 100) NUM INTO COUNTPRICEORDER FROM DUAL;
    COUNTPRICEORDER := ROUND(COUNTPRICEORDER);
    RETURN COUNTPRICEORDER;
END;

