CREATE TABLE IF NOT EXISTS BOOKS (
    ID_BOOK INTEGER PRIMARY KEY NOT NULL,
    ID_AUTHOR INTEGER NOT NULL,
    ID_GENRE INTEGER NOT NULL,
    NAME_BOOK TEXT NOT NULL,
    YEAR_OF_PUBLISHING DATE NOT NULL,
    FOREIGN KEY (ID_AUTHOR) REFERENCES AUTHORS(ID_AUTHOR),
    FOREIGN KEY (ID_GENRE) REFERENCES GENRES(ID_GENRE)
);


CREATE TABLE IF NOT EXISTS AUTHORS (
    ID_AUTHOR INTEGER PRIMARY KEY NOT NULL,
    LASTNAME_AUTHOR TEXT NOT NULL,
    NAME_AUTHOR TEXT NOT NULL,
    MIDDLENAME_AUTHOR TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS GENRES (
    ID_GENRE INTEGER PRIMARY KEY NOT NULL,
    NAME_GENRE TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS READERS (
    ID_READER INTEGER PRIMARY KEY NOT NULL,
    LASTNAME_READER TEXT NOT NULL,
    NAME_READER TEXT NOT NULL,
    MIDDLENAME_READER TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS ORDERS (
    ID_ORDER INTEGER PRIMARY KEY NOT NULL,
    ID_BOOK INTEGER NOT NULL,
    ID_READER INTEGER NOT NULL,
    DATE_ORDER DATE NOT NULL,
    PRICE_ORDER INTEGER,
    FOREIGN KEY (ID_BOOK) REFERENCES BOOKS(ID_BOOK),
    FOREIGN KEY (ID_READER) REFERENCES READERS(ID_READER)
);


CREATE TABLE IF NOT EXISTS REVIEWS (
    ID_REVIEW INTEGER PRIMARY KEY NOT NULL,
    ID_BOOK INTEGER NOT NULL,
    ID_READER INTEGER NOT NULL,
    RATING DECIMAL NOT NULL,
    FOREIGN KEY (ID_BOOK) REFERENCES BOOKS(ID_BOOK),
    FOREIGN KEY (ID_READER) REFERENCES READERS(ID_READER)
);


CREATE TABLE IF NOT EXISTS STOCKS (
    ID_STOCK INTEGER PRIMARY KEY NOT NULL,
    ID_BOOK INTEGER NOT NULL,
    COUNT_BOOK INTEGER NOT NULL,
    DATE_ARRIVAL DATE NOT NULL,
    FOREIGN KEY (ID_BOOK) REFERENCES BOOKS(ID_BOOK)
);


INSERT INTO AUTHORS (ID_AUTHOR, LASTNAME_AUTHOR, NAME_AUTHOR, MIDDLENAME_AUTHOR) VALUES
(4, 'Brown', 'Emma', 'Grace'),
(5, 'Davis', 'Daniel', 'Robert'),
(6, 'Moore', 'Sophia', 'Lynn'),
(7, 'Wilson', 'Joseph', 'Andrew'),
(8, 'Anderson', 'Olivia', 'Rose');


UPDATE AUTHORS
SET LASTNAME_AUTHOR = 'Smith', NAME_AUTHOR = 'John', MIDDLENAME_AUTHOR = 'Michael'
WHERE ID_AUTHOR = 4;


DELETE FROM AUTHORS
WHERE ID_AUTHOR = 5;


INSERT INTO GENRES (ID_GENRE, NAME_GENRE) VALUES
(4, 'Romance'),
(5, 'Thriller'),
(6, 'Historical Fiction'),
(7, 'Fantasy'),
(8, 'Biography');


UPDATE GENRES
SET NAME_GENRE = 'Science Fiction'
WHERE ID_GENRE = 4;


INSERT INTO BOOKS (ID_BOOK, ID_AUTHOR, ID_GENRE, NAME_BOOK, YEAR_OF_PUBLISHING) VALUES
(4, 4, 4, 'Love in Paris', '2021-07-01'),
(5, 5, 5, 'The Dark Secret', '2020-11-20'),
(6, 6, 6, 'The Time Traveler', '2019-05-05'),
(7, 7, 7, 'The Magical Kingdom', '2018-12-10'),
(8, 8, 8, 'A Life Remembered', '2022-02-28');


INSERT INTO READERS (ID_READER, LASTNAME_READER, NAME_READER, MIDDLENAME_READER) VALUES
(104, 'Miller', 'Ethan', 'Thomas'),
(105, 'Clark', 'Isabella', 'Anne'),
(106, 'Hill', 'Carter', 'Michael'),
(107, 'White', 'Madison', 'Nicole'),
(108, 'Martin', 'Aiden', 'Christopher');


INSERT INTO ORDERS (ID_ORDER, ID_BOOK, ID_READER, DATE_ORDER, PRICE_ORDER) VALUES
(4, 4, 104, '2021-08-15', 18),
(5, 5, 105, '2021-09-25', 22),
(6, 6, 106, '2022-03-05', 28),
(7, 7, 107, '2022-04-15', 32),
(8, 8, 108, '2022-05-20', 25);


INSERT INTO REVIEWS (ID_REVIEW, ID_BOOK, ID_READER, RATING) VALUES
(4, 4, 104, 4.0),
(5, 5, 105, 4.8),
(6, 6, 106, 3.5),
(7, 7, 107, 5.0),
(8, 8, 108, 4.2);


INSERT INTO STOCKS (ID_STOCK, ID_BOOK, COUNT_BOOK, DATE_ARRIVAL) VALUES
(4, 4, 40, '2021-07-15'),
(5, 5, 25, '2020-12-01'),
(6, 6, 35, '2019-06-15'),
(7, 7, 50, '2019-01-10'),
(8, 8, 30, '2022-03-01');


CREATE VIEW IF NOT EXISTS BOOKS_VIEW AS
SELECT
    b.ID_BOOK,
    b.NAME_BOOK,
    b.YEAR_OF_PUBLISHING,
    a.LASTNAME_AUTHOR || ', ' || a.NAME_AUTHOR || ' ' || a.MIDDLENAME_AUTHOR AS AUTHOR_NAME,
    g.NAME_GENRE
FROM
    BOOKS b
    JOIN AUTHORS a ON b.ID_AUTHOR = a.ID_AUTHOR
    JOIN GENRES g ON b.ID_GENRE = g.ID_GENRE;
    
SELECT * FROM BOOKS_VIEW;


CREATE INDEX IF NOT EXISTS idx_books_author ON BOOKS (ID_AUTHOR);


CREATE INDEX IF NOT EXISTS idx_books_genre ON BOOKS (ID_GENRE);


CREATE INDEX IF NOT EXISTS idx_orders_book ON ORDERS (ID_BOOK);


CREATE INDEX IF NOT EXISTS idx_orders_reader ON ORDERS (ID_READER);


CREATE INDEX IF NOT EXISTS idx_reviews_book ON REVIEWS (ID_BOOK);


CREATE INDEX IF NOT EXISTS idx_reviews_reader ON REVIEWS (ID_READER);


CREATE INDEX IF NOT EXISTS idx_stocks_book ON STOCKS (ID_BOOK);


CREATE TRIGGER IF NOT EXISTS set_order_date
AFTER INSERT ON ORDERS
FOR EACH ROW
BEGIN
    UPDATE ORDERS
    SET DATE_ORDER = DATE('now')
    WHERE ID_ORDER = NEW.ID_ORDER;
END;


